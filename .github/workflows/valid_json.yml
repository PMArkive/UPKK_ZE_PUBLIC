name: Validate JSON and JSONC files

on:
  push:
    paths:
      - 'cs2/counterstrikesharp/configs/map-text/**'
      - 'cs2/entwatch/maps/**'
      - 'cs2/counterstrikesharp/configs/weapons_buyCommand/weapons.json'
      - 'cs2/cs2fixes/configs/zr/playerclass.jsonc'
      - 'cs2/counterstrikesharp/configs/plugins/Advertisement/Advertisement.json'
  pull_request:
    paths:
      - 'cs2/counterstrikesharp/configs/map-text/**'
      - 'cs2/entwatch/maps/**'
      - 'cs2/counterstrikesharp/configs/weapons_buyCommand/weapons.json'
      - 'cs2/cs2fixes/configs/zr/playerclass.jsonc'
      - 'cs2/counterstrikesharp/configs/plugins/Advertisement/Advertisement.json'

jobs:
  validate-json:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 确保拉取完整提交历史以正确比较差异

    - name: List changed files
      id: list_changed_files
      run: |
        # 根据事件类型确定基准SHA
        if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
        else
          BASE_SHA=${{ github.event.before }}
          HEAD_SHA=${{ github.sha }}
        fi
        # 获取变更文件列表
        git diff --name-only $BASE_SHA $HEAD_SHA > changed_files.txt
        echo "Changed files:"
        cat changed_files.txt

    - name: Install dependencies
      run: |
        npm install -g jsonlint-cli  # 确保安装jsonlint
        npm install jsonc-parser     # 安装jsonc解析库

    - name: Create JSONC validation script
      run: |
        cat > validate-jsonc.js <<EOF
        const fs = require('fs');
        const { parse } = require('jsonc-parser');
        const filePath = process.argv[2];
        if (!fs.existsSync(filePath)) {
          console.log('File deleted, skip validation:', filePath);
          process.exit(0);
        }
        const content = fs.readFileSync(filePath, 'utf8');
        try {
          parse(content);
          console.log('Valid JSONC:', filePath);
        } catch (error) {
          console.error('Invalid JSONC:', filePath);
          console.error(error.message);
          process.exit(1);
        }
        EOF

    - name: Validate JSON and JSONC files
      run: |
        echo "Validating JSON and JSONC files..."
        while IFS= read -r file; do
          if [[ ($file == *.json || $file == *.jsonc) && -f "$file" ]]; then
            echo "Validating $file"
            if [[ $file == *.json ]]; then
              jsonlint-cli "$file" || exit 1
            elif [[ $file == *.jsonc ]]; then
              node validate-jsonc.js "$file" || exit 1
            fi
          else
            echo "Skipping non-existent or non-json file: $file"
          fi
        done < changed_files.txt
